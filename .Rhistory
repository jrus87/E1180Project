}
# Creating a BibTex file
repmis::LoadandCite(packages, file = 'RpackageCitations.bib')
# Removing from global environment for better readability
rm(packages, p, wrkdir)
# Start the pJS (which is?)
pJS <- phantom()
remDr <- remoteDriver(browserName = "phantomjs")
remDr$open(silent = FALSE)
remDr$navigate("http://www.502data.com/retailers")
# Get a data frame of all link extensions
test.html <- read_html(remDr$getPageSource()[[1]]) #html is deprecated in new version of rvest
test.text<-test.html%>%
html_nodes("a.ng-binding")%>%
html_attr("href")
test.RetailerData<-matrix(test.text,byrow=TRUE)
remDr$close()
pJS$stop()
# Subset 5 to make it more readable in quest for function
#test.RetailerData <- test.RetailerData[sample(1:nrow(test.RetailerData), 2, replace=FALSE),]
test.RetailerData
# Now use license numbers (list of 311) as reference point?
#####
# Retailers
#####
RetailerURLs <- paste0("http://www.502data.com/", test.RetailerData)
RetailerURLs <- unique(RetailerURLs)
RetailerURLs <- na.omit(RetailerURLs)
# to check if function is correct, subset to 3 in order to
# waste less time
RetailerLinks<-data.frame(matrix(RetailerURLs,ncol=1,byrow=TRUE))
RetailerLinksSubset <- RetailerLinks[sample(1:nrow(RetailerLinks), 3, replace=FALSE),]
RetailerLinksSubset <- as.character(RetailerLinksSubset)
RetailerLinksSubset
# Create the data frame
RetailerInfo <- lapply(RetailerURLs, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Name <- Retailer %>%
html_nodes("h2") %>%
html_text() %>%
as.character()
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
Checker = data.frame(Name, Month, Sales, ExciseTax, County, Established)
})
RetailerData <- do.call(rbind, RetailerInfo)
head(RetailerData)
# Get rid of $ signs
RetailerData <- mutate(RetailerData, Sales=as.character(Sales))
RetailerData <- mutate(RetailerData, Sales=sapply(strsplit(RetailerData$Sales, split='$', fixed=TRUE), function(x) (x[2])))
RetailerData <- mutate(RetailerData, ExciseTax=as.character(ExciseTax))
RetailerData <- mutate(RetailerData, ExciseTax=sapply(strsplit(RetailerData$ExciseTax, split='$', fixed=TRUE), function(x) (x[2])))
head(RetailerData)
# Make Sales and Excise Tax into numerics
RetailerData$Sales <- as.numeric(gsub(",","", RetailerData$Sales))
RetailerData$ExciseTax <- as.numeric(gsub(",","", RetailerData$ExciseTax))
head(RetailerData)
RetailerURLs
str(RetailerURLs)
RetailerInfo <- lapply(RetailerURLs, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Name <- Retailer %>%
html_nodes("h2") %>%
html_text() %>%
as.character()
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
Checker = data.frame(Name, Month, Sales, ExciseTax, County, Established)
})
# Setting our working directory
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/E1180Project',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
# Installing packages
packages <- c('rvest', 'xml2', 'dplyr', 'magrittr', 'RSelenium')
for (p in packages) {
if (p %in% installed.packages()) require(p, character.only=TRUE)
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
# Creating a BibTex file
repmis::LoadandCite(packages, file = 'RpackageCitations.bib')
# Removing from global environment for better readability
rm(packages, p, wrkdir)
# Start the pJS (which is?)
pJS <- phantom()
remDr <- remoteDriver(browserName = "phantomjs")
remDr$open(silent = FALSE)
remDr$navigate("http://www.502data.com/retailers")
# Get a data frame of all link extensions
test.html <- read_html(remDr$getPageSource()[[1]]) #html is deprecated in new version of rvest
test.text<-test.html%>%
html_nodes("a.ng-binding")%>%
html_attr("href")
test.df<-matrix(test.text,byrow=TRUE)
remDr$close()
pJS$stop()
# Subset 5 to make it more readable in quest for function
#test.df <- test.df[sample(1:nrow(test.df), 2, replace=FALSE),]
test.df
# Now use license numbers (list of 311) as reference point?
#####
# Retailers
#####
RetailerURLs <- paste0("http://www.502data.com/", test.df)
RetailerURLs <- unique(RetailerURLs)
RetailerURLs <- na.omit(RetailerURLs)
# to check if function is correct, subset to 3 in order to
# waste less time
RetailerLinks<-data.frame(matrix(RetailerURLs,ncol=1,byrow=TRUE))
#RetailerLinksSubset <- RetailerLinks[sample(1:nrow(RetailerLinks), 3, replace=FALSE),]
RetailerLinks <- as.character(RetailerLinks)
RetailerLinksSubset
RetailerURLs
RetailerLinks
# Setting our working directory
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/E1180Project',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
# Installing packages
packages <- c('rvest', 'xml2', 'dplyr', 'magrittr', 'RSelenium')
for (p in packages) {
if (p %in% installed.packages()) require(p, character.only=TRUE)
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
# Creating a BibTex file
repmis::LoadandCite(packages, file = 'RpackageCitations.bib')
# Removing from global environment for better readability
rm(packages, p, wrkdir)
# Start the pJS (which is?)
pJS <- phantom()
remDr <- remoteDriver(browserName = "phantomjs")
remDr$open(silent = FALSE)
remDr$navigate("http://www.502data.com/retailers")
# Get a data frame of all link extensions
test.html <- read_html(remDr$getPageSource()[[1]]) #html is deprecated in new version of rvest
test.text<-test.html%>%
html_nodes("a.ng-binding")%>%
html_attr("href")
test.df<-matrix(test.text,byrow=TRUE)
remDr$close()
pJS$stop()
# Subset 5 to make it more readable in quest for function
#test.df <- test.df[sample(1:nrow(test.df), 2, replace=FALSE),]
test.df
# Now use license numbers (list of 311) as reference point?
#####
# Retailers
#####
RetailerURLs <- paste0("http://www.502data.com/", test.df)
RetailerURLs <- unique(RetailerURLs)
RetailerURLs <- na.omit(RetailerURLs)
# to check if function is correct, subset to 3 in order to
# waste less time
#RetailerLinks<-data.frame(matrix(RetailerURLs,ncol=1,byrow=TRUE))
#RetailerLinksSubset <- RetailerLinks[sample(1:nrow(RetailerLinks), 3, replace=FALSE),]
#RetailerLinksSubset <- as.character(RetailerLinksSubset)
# Create the data frame
RetailerInfo <- lapply(RetailerURLs, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Name <- Retailer %>%
html_nodes("h2") %>%
html_text() %>%
as.character()
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
Checker = data.frame(Name, Month, Sales, ExciseTax, County, Established)
})
df <- do.call(rbind, RetailerInfo)
head(df)
# Get rid of $ signs
df <- mutate(df, Sales=as.character(Sales))
df <- mutate(df, Sales=sapply(strsplit(df$Sales, split='$', fixed=TRUE), function(x) (x[2])))
df <- mutate(df, ExciseTax=as.character(ExciseTax))
df <- mutate(df, ExciseTax=sapply(strsplit(df$ExciseTax, split='$', fixed=TRUE), function(x) (x[2])))
head(df)
# Make Sales and Excise Tax into numerics
df$Sales <- as.numeric(gsub(",","", df$Sales))
df$ExciseTax <- as.numeric(gsub(",","", df$ExciseTax))
head(df)
RetailerLinks<-data.frame(matrix(RetailerURLs,ncol=1,byrow=TRUE))
RetailerLinksSubset <- RetailerLinks[sample(1:nrow(RetailerLinks), 25, replace=FALSE),]
RetailerLinksSubset <- as.character(RetailerLinksSubset)
# Create the data frame
RetailerInfo <- lapply(RetailerLinksSubset, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Name <- Retailer %>%
html_nodes("h2") %>%
html_text() %>%
as.character()
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
Checker = data.frame(Name, Month, Sales, ExciseTax, County, Established)
})
RetailerInfo <- lapply(RetailerLinksSubset, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
Checker = data.frame(Name, Month, Sales, ExciseTax, County, Established)
})
RetailerInfo <- lapply(RetailerLinksSubset, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
Checker = data.frame(Month, Sales, ExciseTax, County, Established)
})
df <- do.call(rbind, RetailerInfo)
head(df)
View(df)
# Create the data frame
RetailerInfo <- lapply(RetailerLinksSubset, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
RetailerURLLink <- URLLink
Checker = data.frame(Month, Sales, ExciseTax, County, Established, RetailerURLLink)
})
df <- do.call(rbind, RetailerInfo)
head(df)
View(df)
table(unique(df$RetailerURLLink))
table(unique(df$County))
table(df$County)
test.html <- read_html(remDr$getPageSource()[[1]]) #html is deprecated in new version of rvest
test.text<-test.html%>%
html_nodes("a.ng-binding")%>%
html_attr()
test.df<-matrix(test.text,byrow=TRUE)
remDr$close()
pJS$stop()
# Subset 5 to make it more readable in quest for function
#test.df <- test.df[sample(1:nrow(test.df), 2, replace=FALSE),]
test.df
RetailerInfo <- lapply(RetailerURLs, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
RetailerURLLink <- URLLink
Checker = data.frame(Month, Sales, ExciseTax, County, Established, RetailerURLLink)
})
df <- do.call(rbind, RetailerInfo)
View(df)
RetailerInfo <- lapply(RetailerURLs, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Name <- Retailer %>%
html_nodes("h1") %>%
html_text() %>%
as.character()
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
RetailerURLLink <- URLLink
Checker = data.frame(Name, Month, Sales, ExciseTax, County, Established, RetailerURLLink)
}) # takes around 6 minutes
df <- do.call(rbind, RetailerInfo)
View(df)
# Setting our working directory
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/E1180Project',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
# Installing packages
packages <- c('rvest', 'xml2', 'dplyr', 'magrittr', 'RSelenium')
for (p in packages) {
if (p %in% installed.packages()) require(p, character.only=TRUE)
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
# Creating a BibTex file
repmis::LoadandCite(packages, file = 'RpackageCitations.bib')
# Removing from global environment for better readability
rm(packages, p, wrkdir)
# Start the pJS (which is?; can it be done without the application in the folder?)
pJS <- phantom()
remDr <- remoteDriver(browserName = "phantomjs")
remDr$open(silent = FALSE)
remDr$navigate("http://www.502data.com/retailers")
# Get a data frame of all link extensions
Retailer.html <- read_html(remDr$getPageSource()[[1]]) #html is deprecated in new version of rvest
Retailer.text<-Retailer.html%>%
html_nodes("a.ng-binding")%>%
html_attr("href")
Retailer.table<-matrix(Retailer.text,byrow=TRUE)
remDr$close()
pJS$stop()
# Subset 5 to make it more readable in quest for function
#Retailer.table <- Retailer.table[sample(1:nrow(Retailer.table), 2, replace=FALSE),]
#Retailer.table
# Now use license numbers (list of 311) as reference point?
#####
# Retailers
#####
RetailerURLs <- paste0("http://www.502data.com/", Retailer.table)
RetailerURLs <- unique(RetailerURLs)
RetailerURLs <- na.omit(RetailerURLs)
# to check if function is correct, subset to 3 in order to
# waste less time
#RetailerLinks<-data.frame(matrix(RetailerURLs,ncol=1,byrow=TRUE))
#RetailerLinksSubset <- RetailerLinks[sample(1:nrow(RetailerLinks), 25, replace=FALSE),]
#RetailerLinksSubset <- as.character(RetailerLinksSubset)
# Create the data frame
RetailerInfo <- lapply(RetailerURLs, FUN=function(URLLink){
Retailer <- read_html(URLLink)
Name <- Retailer %>%
html_nodes("h1") %>%
html_text() %>%
as.character()
Month <- Retailer %>%
html_nodes("td:nth-child(1)") %>%
html_text() %>%
as.character()
Sales <- Retailer %>%
html_nodes("td:nth-child(2)") %>%
html_text() %>%
as.character()
ExciseTax <- Retailer %>%
html_nodes("td:nth-child(3)") %>%
html_text() %>%
as.character()
County <- Retailer %>%
html_nodes(".text-muted a") %>%
html_text() %>%
as.character()
Established <- Retailer %>%
html_nodes(".text-muted + h4") %>%
html_text() %>%
as.character()
RetailerURLLink <- URLLink
Checker = data.frame(Name, Month, Sales, ExciseTax, County, Established, RetailerURLLink)
}) # takes around 6 minutes
Retailer <- do.call(rbind, RetailerInfo)
View(Retailer)
# plus count via plyr? = frequency count
table(unique(Retailer$RetailerURLLink))
table(Retailer$County)
# Get rid of $ signs
Retailer <- mutate(Retailer, Sales=as.character(Sales))
Retailer <- mutate(Retailer, Sales=sapply(strsplit(Retailer$Sales, split='$', fixed=TRUE), function(x) (x[2])))
Retailer <- mutate(Retailer, ExciseTax=as.character(ExciseTax))
Retailer <- mutate(Retailer, ExciseTax=sapply(strsplit(Retailer$ExciseTax, split='$', fixed=TRUE), function(x) (x[2])))
head(Retailer)
# Make Sales and Excise Tax into numerics
Retailer$Sales <- as.numeric(gsub(",","", Retailer$Sales))
Retailer$ExciseTax <- as.numeric(gsub(",","", Retailer$ExciseTax))
head(Retailer)
