227*8
devtools::install_github("benmarwick/wordcountaddin", type="source", dependencies=TRUE)
wordcountaddin:::text_stats()
wordcountaddin:::readability()
wordcountaddin:::text_stats()
wordcountaddin:::readability()
wordcountaddin:::text_stats()
numeric <- 10
numeric
str(numeric)
numeric_sequence <- c(1:10)
numeric_sequence
class(numeric)
class(numeric, numeric_sequence)
character_vector <- c('Albania', 'Botswana', 'Cambodia')
character_vector
numeric <- 10
numeric
numeric_vector <- c(1:3)
numeric_vector
class(numeric)
character_vector <- c('Albania', 'Botswana', 'Cambodia')
character_vector
matrix_combined <- cbind(numeric_vector, character_vector)
matrix_combined
combined_df <- data.frame(numeric_vector, character_vector, stringsAsFactors = FALSE)
combined_df
test_list <- list(countries = character_vector, not_there = c(NA, NA),
more_numbers = 1:10)
test_list
packages <- c('sp', 'RColorBrewer', 'maptools', 'raster', 'repmis')
for (p in packages) {
if (p %in% installed.packages()) require(p, character.only=TRUE)
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
adm <- getData('GADM', country='FRA', level=1)
data()
data(EuStockMarkets)
names(EUStockMarkets)
j <- data(EuStockMarkets)
names(j)
j <- as.data.frame(EuStockMarkets)
names(j)
j$DAX
View(j)
?j
?EuStockMarkets
library(ggplot2)
ggplot(EuStockMarkets$DAX)
ggplot(j$DAX)
ggplot(j$DAX) + geom_line
line(j$DAX)
plot(j$DAX)
plot(j$DAX, type="l")
plot(j$DAX, type="o")
plot(j$DAX, type="p")
plot(j$DAX, type="b")
plot(j$DAX, type="l")
qplot(j$DAX) + geom_line
hist(j$DAX)
summary(j)
sd(j)
sd(j$DAX)
logical_vector <- c(TRUE, FALSE, TRUE)
?summary
numeric_vector <- c(1:5)
numueric_vector <- c(1:5)
numeric_vector <- c(1:100)
numeric_vector <- c(1:5)
numeric_vector2 <- c(1:100)
numeric_vector <- c(1:5)
# create a vector with numbers 1 to 100
numeric_vector2 <- c(1:100)
url <- "https://data.seattle.gov/resource/pu5n-trf4.json"
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
library(RSocrata)
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
url <- "https://data.seattle.gov/Public-Safety/Seattle-Police-Department-911-Incident-Response/3k2p-39jp/data"
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
url <- "https://data.seattle.gov/resource/pu5n-trf4.json"
url <- "https://opendata.bristol.gov.uk/Health/2011-Census-health/bdwv-2hn9"
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
View(k)
url <- "https://data.seattle.gov/Public-Safety/Seattle-Police-Department-911-Incident-Response/3k2p-39jp"
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
url <- "https://data.seattle.gov/Public-Safety/Seattle-Police-Department-911-Incident-Response/3k2p-39jp/data"
ls.socrata(url)
install.packages("OData")
library(RSocrata)
od <- "https://data.seattle.gov/OData.svc/3k2p-39jp$format=json"
library(OData)
k <- retrieveData(od)
od <- "https://data.seattle.gov/OData.svc/3k2p-39jp"
k <- retrieveData(od)
k<-downloadResourceCsv(url, separator)
k<-downloadResourceCsv(url)
k<-downloadResourceCsv(url, separator = ",")
View(k)
od <- "https://data.seattle.gov/OData.svc/3k2p-39jp$format=json"
k<-downloadResourceCsv(url, separator = ",")
k<-downloadResourceCsv(od, separator = ",")
od <- "https://data.seattle.gov/OData.svc/3k2p-39jp"
k<-downloadResourceCsv(od, separator = ",")
View(k)
url <- "https://data.seattle.gov/Public-Safety/Seattle-Police-Department-911-Incident-Response/3k2p-39jp/data"
ls.socrata(url)
k<-ls.socrata(url)
View(k)
which(grepl("911", k$description))
k[411,]
which(grepl("Incident", k$description))
k[73,]
j<-k[c(73,217),]
View(j)
which(grepl("Police Department", k$description))
j<-k[c(73,218, 253, 283),]
View(j)
?fromJSON
SeattleCrimeRaw<-jsonlite::fromJSON("https://data.seattle.gov/api/views/3k2p-39jp/rows.json?accessType=DOWNLOAD")
library(RSocrata)
df <- read.socrata("https://performance.seattle.gov/resource/2uqw-4n38?$$app_token=YOURAPPTOKENHERE")
library("RSocrata")
df <- read.socrata("https://performance.seattle.gov/resource/2uqw-4n38?$$app_token=YOURAPPTOKENHERE")
# Setting our working directory
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/E1180Project',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
# Installing packages
packages <- c('dplyr', 'repmis', 'ggmap', 'ggplot2', 'geosphere', 'fields', 'lubridate')
for (p in packages) {
if (p %in% installed.packages()) require(p, character.only=TRUE)
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
# Creating a BibTex file
repmis::LoadandCite(packages, file = './BibTex/RpackageCitations_Analysis.bib')
# Removing from global environment for better readability
rm(packages, p, wrkdir)
# Setting our working directory
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/E1180Project',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
rm(wrkdir)
source("./Codes/Cleaning_Analysis_Seattle.R")
source("./Codes/Cleaning_USCensusData.R")
###
# Descriptive Statistics Washington State - Producers/Processors and Retailers
###
# 1. How many Producers/Processors and Retailers per year for Washington
# 1.a Create unique Producers/Processors and Retailers lengths for barplot
Retailer2014 <- Retailer[which(Retailer$Month=="2014-12"),]
Retailer2015 <- Retailer[which(Retailer$Month=="2015-12"),]
Retailer2016 <- Retailer[which(Retailer$Month!="2015-12" & Retailer$Month!="2014-12"),]
Retailer2014.uniq <- as.numeric(length(which(!duplicated(Retailer2014$RetailerURLLink))))
Retailer2015.uniq <- as.numeric(length(which(!duplicated(Retailer2015$RetailerURLLink))))
Retailer2016.uniq <- as.numeric(length(which(!duplicated(Retailer2016$RetailerURLLink))))
ProdProc2014 <- ProdProc[which(ProdProc$Month=="2014-12"),]
ProdProc2015 <- ProdProc[which(ProdProc$Month=="2015-12"),]
ProdProc2016 <- ProdProc[which(ProdProc$Month!="2015-12" & ProdProc$Month!="2014-12"),]
ProdProc2014.uniq <- as.numeric(length(which(!duplicated(ProdProc2014$Name))))
ProdProc2015.uniq <- as.numeric(length(which(!duplicated(ProdProc2015$Name))))
ProdProc2016.uniq <- as.numeric(length(which(!duplicated(ProdProc2016$Name))))
# 1.b Create the barplot
Year <- as.character(c(2014:2016))
WA.numbers <- c(ProdProc2014.uniq, ProdProc2015.uniq, ProdProc2016.uniq,
Retailer2014.uniq, Retailer2015.uniq, Retailer2016.uniq)
WA.name <- c("Producer/Processor", "Producer/Processor", "Producer/Processor",
"Retailer", "Retailer", "Retailer")
WA.bar <- data.frame(Year, WA.numbers, WA.name, stringsAsFactors = FALSE)
washington.barplot <- ggplot(WA.bar, aes(x=Year, y=WA.numbers, fill=WA.name)) +
geom_bar(stat="identity", colour="black",width=.8, position=position_dodge()) +
theme_bw() + xlab("Year") + ylab("Frequency") + scale_fill_hue(name="Form of business") +
ggtitle("Number of Producers and Processors in WA")
washington.barplot
# Draw map of Seattle
map.seattle_city <- qmap("seattle", zoom = 11, source="stamen", maptype="toner",darken = c(.3,"#BBBBBB"))
map.seattle_city +
geom_polygon(data=Seattle.SOE, aes(x=lon,y=lat, group=group, fill=percent, color=muted("blue"), alpha=0.9)) +
scale_fill_gradient2(breaks=pretty_breaks(n=5), guide=guide_legend(title="Percent living > $200k", keywidth = 2)) +
geom_point(data=Seattle.Merged, aes(x=lon.Narc, y=lat.Narc), color="dark green", alpha=0.03, size=1.1) +
geom_point(data=Seattle.Merged, aes(x=lon.Ret, y=lat.Ret), color="dark red", size=2) +
theme_nothing(legend=TRUE) +
labs(title = "Crime in Seattle")
Narc <- which(grepl("LIQUOR", Seattle.Merged$Event.Clearance.Description))
Narc2 <- which(grepl("DUI", Seattle.Merged$Event.Clearance.Description))
Only.Narcotics <- Seattle.Merged[-c(Narc, Narc2),]
map.seattle_city +
geom_polygon(data=Seattle.SOE, aes(x=lon,y=lat, group=group, fill=percent, color=muted("blue"), alpha=0.9)) +
scale_fill_gradient2(breaks=pretty_breaks(n=5), guide=guide_legend(title="Percent living > $200k", keywidth = 2)) +
geom_point(data=Only.Narcotics, aes(x=lon.Narc, y=lat.Narc), color="dark green", alpha=0.03, size=1.1) +
geom_point(data=Seattle.Merged, aes(x=lon.Ret, y=lat.Ret), color="dark red", size=2) +
theme_nothing(legend=TRUE) +
labs(title = "Narcotic Crime in Seattle")
Weed <- which(grepl("MARIJUANA", Only.Narcotics$Event.Clearance.Description))
Only.Weed <- Only.Narcotics[Weed,]
map.seattle_city +
geom_polygon(data=Seattle.SOE, aes(x=lon,y=lat, group=group, fill=percent, color=muted("blue"), alpha=0.9)) +
scale_fill_gradient2(breaks=pretty_breaks(n=5), guide=guide_legend(title="Percent living > $200k", keywidth = 2)) +
geom_point(data=Only.Weed, aes(x=lon.Narc, y=lat.Narc), color="dark green", alpha=0.03, size=1.1) +
geom_point(data=Seattle.Merged, aes(x=lon.Ret, y=lat.Ret), color="dark red", size=2) +
theme_nothing(legend=TRUE) +
labs(title = "Narcotic Crime in Seattle")
table(Only.Narcotics$Event.Clearance.Description)
