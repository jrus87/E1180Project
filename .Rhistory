227*8
devtools::install_github("benmarwick/wordcountaddin", type="source", dependencies=TRUE)
wordcountaddin:::text_stats()
wordcountaddin:::readability()
wordcountaddin:::text_stats()
wordcountaddin:::readability()
wordcountaddin:::text_stats()
numeric <- 10
numeric
str(numeric)
numeric_sequence <- c(1:10)
numeric_sequence
class(numeric)
class(numeric, numeric_sequence)
character_vector <- c('Albania', 'Botswana', 'Cambodia')
character_vector
numeric <- 10
numeric
numeric_vector <- c(1:3)
numeric_vector
class(numeric)
character_vector <- c('Albania', 'Botswana', 'Cambodia')
character_vector
matrix_combined <- cbind(numeric_vector, character_vector)
matrix_combined
combined_df <- data.frame(numeric_vector, character_vector, stringsAsFactors = FALSE)
combined_df
test_list <- list(countries = character_vector, not_there = c(NA, NA),
more_numbers = 1:10)
test_list
packages <- c('sp', 'RColorBrewer', 'maptools', 'raster', 'repmis')
for (p in packages) {
if (p %in% installed.packages()) require(p, character.only=TRUE)
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
adm <- getData('GADM', country='FRA', level=1)
data()
data(EuStockMarkets)
names(EUStockMarkets)
j <- data(EuStockMarkets)
names(j)
j <- as.data.frame(EuStockMarkets)
names(j)
j$DAX
View(j)
?j
?EuStockMarkets
library(ggplot2)
ggplot(EuStockMarkets$DAX)
ggplot(j$DAX)
ggplot(j$DAX) + geom_line
line(j$DAX)
plot(j$DAX)
plot(j$DAX, type="l")
plot(j$DAX, type="o")
plot(j$DAX, type="p")
plot(j$DAX, type="b")
plot(j$DAX, type="l")
qplot(j$DAX) + geom_line
hist(j$DAX)
summary(j)
sd(j)
sd(j$DAX)
logical_vector <- c(TRUE, FALSE, TRUE)
?summary
numeric_vector <- c(1:5)
numueric_vector <- c(1:5)
numeric_vector <- c(1:100)
numeric_vector <- c(1:5)
numeric_vector2 <- c(1:100)
numeric_vector <- c(1:5)
# create a vector with numbers 1 to 100
numeric_vector2 <- c(1:100)
url <- "https://data.seattle.gov/resource/pu5n-trf4.json"
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
library(RSocrata)
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
url <- "https://data.seattle.gov/Public-Safety/Seattle-Police-Department-911-Incident-Response/3k2p-39jp/data"
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
url <- "https://data.seattle.gov/resource/pu5n-trf4.json"
url <- "https://opendata.bristol.gov.uk/Health/2011-Census-health/bdwv-2hn9"
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
View(k)
url <- "https://data.seattle.gov/Public-Safety/Seattle-Police-Department-911-Incident-Response/3k2p-39jp"
k<-read.socrata(url, app_token = NULL, email = NULL, password = NULL)
url <- "https://data.seattle.gov/Public-Safety/Seattle-Police-Department-911-Incident-Response/3k2p-39jp/data"
ls.socrata(url)
install.packages("OData")
library(RSocrata)
od <- "https://data.seattle.gov/OData.svc/3k2p-39jp$format=json"
library(OData)
k <- retrieveData(od)
od <- "https://data.seattle.gov/OData.svc/3k2p-39jp"
k <- retrieveData(od)
k<-downloadResourceCsv(url, separator)
k<-downloadResourceCsv(url)
k<-downloadResourceCsv(url, separator = ",")
View(k)
od <- "https://data.seattle.gov/OData.svc/3k2p-39jp$format=json"
k<-downloadResourceCsv(url, separator = ",")
k<-downloadResourceCsv(od, separator = ",")
od <- "https://data.seattle.gov/OData.svc/3k2p-39jp"
k<-downloadResourceCsv(od, separator = ",")
View(k)
url <- "https://data.seattle.gov/Public-Safety/Seattle-Police-Department-911-Incident-Response/3k2p-39jp/data"
ls.socrata(url)
k<-ls.socrata(url)
View(k)
which(grepl("911", k$description))
k[411,]
which(grepl("Incident", k$description))
k[73,]
j<-k[c(73,217),]
View(j)
which(grepl("Police Department", k$description))
j<-k[c(73,218, 253, 283),]
View(j)
?fromJSON
SeattleCrimeRaw<-jsonlite::fromJSON("https://data.seattle.gov/api/views/3k2p-39jp/rows.json?accessType=DOWNLOAD")
library(RSocrata)
df <- read.socrata("https://performance.seattle.gov/resource/2uqw-4n38?$$app_token=YOURAPPTOKENHERE")
library("RSocrata")
df <- read.socrata("https://performance.seattle.gov/resource/2uqw-4n38?$$app_token=YOURAPPTOKENHERE")
# Setting our working directory
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/E1180Project',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
45.65/105.37
3.305/4.461
3.021/4.461
Seattle.Crime.Analysis <- read.table(gzfile("./Data/SeattleCrimeAnalysis.gz"),row.names=1)
# Setting our working directory
wrkdir <- c('C:/Users/Benji/Desktop/Statistics/Git/Repositories/E1180Project',
'~/Hertie School/Fall 2016/CollaborativeSocialScienceDataAnalysis/CSSR')
repmis::set_valid_wd(wrkdir)
# Installing packages
packages <- c('dplyr', 'repmis', 'fields', 'cowplot', 'ggmap', 'ggplot2', 'stargazer')
for (p in packages) {
if (p %in% installed.packages()) require(p, character.only=TRUE)
else {
install.packages(p)
require(p, character.only=TRUE)
}
}
# Creating a BibTex file
repmis::LoadandCite(packages, file = './BibTex/RpackageCitations_Analysis.bib')
# Removing from global environment for better readability
rm(packages, p, wrkdir)
Seattle.Crime.Analysis <- read.table(gzfile("./Data/SeattleCrimeAnalysis.gz"),row.names=1)
source("./Codes/Cleaning_Retailers.R") # For first barplot
source("./Codes/Cleaning_ProdProc.R") # For second barplot
# 1.a Create unique Producers/Processors and Retailers lengths for barplot
Retailer2014 <- Retailer[which(Retailer$Month=="2014-12"),]
Retailer2015 <- Retailer[which(Retailer$Month=="2015-12"),]
Retailer2016 <- Retailer[which(Retailer$Month!="2015-12" & Retailer$Month!="2014-12"),]
Retailer2014.uniq <- as.numeric(length(which(!duplicated(Retailer2014$RetailerURLLink))))
Retailer2015.uniq <- as.numeric(length(which(!duplicated(Retailer2015$RetailerURLLink))))
Retailer2016.uniq <- as.numeric(length(which(!duplicated(Retailer2016$RetailerURLLink))))
ProdProc2014 <- ProdProc[which(ProdProc$Month=="2014-12"),]
ProdProc2015 <- ProdProc[which(ProdProc$Month=="2015-12"),]
ProdProc2016 <- ProdProc[which(ProdProc$Month!="2015-12" & ProdProc$Month!="2014-12"),]
ProdProc2014.uniq <- as.numeric(length(which(!duplicated(ProdProc2014$Name))))
ProdProc2015.uniq <- as.numeric(length(which(!duplicated(ProdProc2015$Name))))
ProdProc2016.uniq <- as.numeric(length(which(!duplicated(ProdProc2016$Name))))
# 1.b Create the barplot
Year <- c("2014", "2015", "Oct-2016")
WA.numbers <- c(ProdProc2014.uniq, ProdProc2015.uniq, ProdProc2016.uniq,
Retailer2014.uniq, Retailer2015.uniq, Retailer2016.uniq)
WA.name <- c("Producer/Processor", "Producer/Processor", "Producer/Processor",
"Retailer", "Retailer", "Retailer")
WA.bar <- data.frame(Year, WA.numbers, WA.name, stringsAsFactors = FALSE)
washington.barplot <- ggplot(WA.bar, aes(x=Year, y=WA.numbers, fill=WA.name)) +
geom_bar(stat="identity", colour="black",width=.8, position=position_dodge()) +
theme_bw() + xlab("Year") + ylab("Frequency") + scale_fill_hue(name="Form of business") +
ggtitle("Number of Producers and Processors in WA")
washington.barplot
# Growth pattern:
# Number of Producers and businesses:
# 2015: increase by 210 % (from 185 to 574)
# 2016: increase by 53 % (from 574 to 881)
# Number of Retailers:
# 2015: increase by 130 % (from 82 to 189)
# 2016: increase by 69 % (from 189 to 319)
rm(Retailer2016.uniq, Retailer2015.uniq, Retailer2014.uniq, Retailer2016, Retailer2015, Retailer2014,
ProdProc2016.uniq, ProdProc2015.uniq, ProdProc2014.uniq, ProdProc2016, ProdProc2015, ProdProc2014,
WA.bar, WA.name, WA.numbers)
# 2. How many Producers/Processors and Retailers per year for King County
Sales2014 <- sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2014-12"])/1e+6
Sales2015 <- sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2015-12"])/1e+6
Sales2016 <- (sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-01"]) +
sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-02"]) +
sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-03"]) +
sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-04"]) +
sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-05"]) +
sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-06"]) +
sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-07"]) +
sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-08"]) +
sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-09"]) +
sum(Retailer$Sales.Ret[Retailer$Month.Ret=="2016-10"]))/1e+6
ExciseTax2014 <- sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2014-12"])/1e+6
ExciseTax2015 <- sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2015-12"])/1e+6
ExciseTax2016 <- (sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-01"]) +
sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-02"]) +
sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-03"]) +
sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-04"]) +
sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-05"]) +
sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-06"]) +
sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-07"]) +
sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-08"]) +
sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-09"]) +
sum(Retailer$ExciseTax.Ret[Retailer$Month.Ret=="2016-10"]))/1e+6
# 1.b Create the barplot
WA.numbers.e <- c(Sales2014, Sales2015, Sales2016,
ExciseTax2014, ExciseTax2015, ExciseTax2016)
WA.name.e <- c("Sales", "Sales", "Sales",
"Excise Tax", "Excise Tax", "Excise Tax")
WA.bar.e <- data.frame(Year, WA.numbers.e, WA.name.e, stringsAsFactors = FALSE)
washington.barplot.e <- ggplot(WA.bar.e, aes(x=Year, y=WA.numbers.e, fill=WA.name.e)) +
geom_bar(stat="identity", colour="black",width=.8, position=position_dodge()) +
theme_bw() + xlab("Year") + ylab("Amount in Mio. US-Dollars") +
ggtitle("Cannabis related Sales and Tax Revenues in WA")
washington.barplot.e
# Growth pattern:
# Increase of Sales Revenue:
# 2015: increase by 960 % (from 29.21 to 309.86)
# 2016: increase by 77 % (from 309.86 to 549.93)
# Increase of Tax Revenue:
# 2015: increase by 1040 % (from 9.74 to 110.97)
# 2016: increase by 83 % (from 110.97 to 203.47)
rm(Sales2014, Sales2015, Sales2016, ExciseTax2014, ExciseTax2015, ExciseTax2016,
WA.bar.e, WA.name.e, WA.numbers.e, Year)
# 3. Create a crime subset for Month October 2016
CrimeOct2016 <- Seattle.Crime.Analysis[Seattle.Crime.Analysis$Month=="2016-10",]
Crime.lines <- aggregate(cbind(freq) ~ Crime + Month, data=Seattle.Crime.Analysis, FUN=function(x) mean(range(x)))
Crime.lines$freq <- log(Crime.lines$freq)
Crime.lines <- aggregate(cbind(freq) ~ Crime + Month, data=Seattle.Crime.Analysis, FUN=function(x) mean(range(x)))
Crime.lines$logfreq <- log(Crime.lines$freq)
crime.graph <- ggplot(Crime.lines, aes(Month, freq, group=Crime, colour = factor(Crime)))
crime.graph + geom_line() +
xlab("Months") + ylab("Natural logarithm of Crime categories") + theme_bw() +
theme(axis.text.x = element_text(angle=90)) +
labs(colour = "Crime Categories") +
ggtitle("Crime rates development in Seattle")
View(Crime.lines)
View(Seattle.Crime.Analysis)
Crime.lines <- aggregate(cbind(CrimePerThousand) ~ Crime + Month, data=Seattle.Crime.Analysis, FUN=function(x) mean(range(x)))
crime.graph <- ggplot(Crime.lines, aes(Month, freq, group=Crime, colour = factor(Crime)))
crime.graph + geom_line() +
xlab("Months") + ylab("Natural logarithm of Crime categories") + theme_bw() +
theme(axis.text.x = element_text(angle=90)) +
labs(colour = "Crime Categories") +
ggtitle("Crime rates development in Seattle")
crime.graph <- ggplot(Crime.lines, aes(Month, CrimePerThousand, group=Crime, colour = factor(Crime)))
crime.graph + geom_line() +
xlab("Months") + ylab("Natural logarithm of Crime categories") + theme_bw() +
theme(axis.text.x = element_text(angle=90)) +
labs(colour = "Crime Categories") +
ggtitle("Crime rates development in Seattle")
Crime.lines$log <- log(Crime.lines$CrimePerThousand)
crime.graph.log <- ggplot(Crime.lines, aes(Month, log, group=Crime, colour = factor(Crime)))
crime.graph.log + geom_line() +
xlab("Months") + ylab("Natural logarithm of Crime Rate per 1000 inhabitants") + theme_bw() +
theme(axis.text.x = element_text(angle=90)) +
labs(colour = "Crime Categories") +
ggtitle("Crime rates development in Seattle")
names(Seattle.Crime.Analysis)
summary(Seattle.Crime.Analysis$Adult)
table(Seattle.Crime.Analysis$Adult)
table(Seattle.Crime.Analysis$Kids)
summary(Seattle.Crime.Analysis$Kids)
summary(Seattle.Crime.Analysis$Retiree)
summary(Seattle.Crime.Analysis$Adult)
summary(Seattle.Crime.Analysis$Kids[Seattle.Crime.Analysis$Adult<=72.36])
summary(Seattle.Crime.Analysis$Retiree[Seattle.Crime.Analysis$Kids<=21.55[Seattle.Crime.Analysis$Adult<=72.36]])
summary(Seattle.Crime.Analysis$Retiree[Seattle.Crime.Analysis$Kids<=21.55 & Seattle.Crime.Analysis$Adult<=72.36])
summary(Seattle.Crime.Analysis$Adult)
summary(Seattle.Crime.Analysis$Kids[Seattle.Crime.Analysis$Adult<=72.36]) # in the lower half
summary(Seattle.Crime.Analysis$Retiree[Seattle.Crime.Analysis$Kids<=21.55 & Seattle.Crime.Analysis$Adult<=72.36])
Seattle.Crime.Analysis$AgeCat <- NA
Seattle.Crime.Analysis$AgeCat[Seattle.Crime.Analysis$Adult>=72.36] <- "Predominantly Adult"
table(Seattle.Crime.Analysis$AgeCat)
Seattle.Crime.Analysis$AgeCat[Seattle.Crime.Analysis$Adult>=72.36] <- "Above average Adult"
summary(Seattle.Crime.Analysis$Retiree)
summary(Seattle.Crime.Analysis$Kids)
Seattle.Crime.Analysis$AgeCat <- NA
Seattle.Crime.Analysis$AgeCat[Seattle.Crime.Analysis$Retiree>=10.78] <- "Above average Retiree"
Seattle.Crime.Analysis$AgeCat[Seattle.Crime.Analysis$Kids>=16.86] <- "Above average Kids"
Seattle.Crime.Analysis$AgeCat[Seattle.Crime.Analysis$Adult>=72.36] <- "Above average Adult"
table(Seattle.Crime.Analysis$AgeCat)
103569+124517+585
table(is.na(Seattle.Crime.Analysis$AgeCat))
228671+94
M1 <- lm(CrimePerThousand ~ Established, data=Seattle.Crime.Analysis)
summary(M1)
confint(M1) # this analyses the effect on an establishment on all crime -> M2 by region, M3 for different drugs
Seattle.Crime.Analysis.201402 <- Seattle.Crime.Analysis(-which(Seattle.Crime.Analysis$Month=="2014-01"))
Seattle.Crime.Analysis.201402 <- Seattle.Crime.Analysis[-which(Seattle.Crime.Analysis$Month=="2014-01")]
View(Seattle.Crime.Analysis.201402)
Seattle.Crime.Analysis.201402 <- Seattle.Crime.Analysis[-which(Seattle.Crime.Analysis$Month=="2014-01"),]
length(which(Seattle.Crime.Analysis$Month=="2014-01"))
226338-228765
summary(M1)
M1.201402 <- lm(CrimePerThousand ~ Established, data=Seattle.Crime.Analysis.201402)
summary(M1.201402)
Seattle.Crime.Analysis$GEOID <- as.character(Seattle.Crime.Analysis$GEOID)
M2 <- lm(CrimePerThousand ~ Established + GEOID, data=Seattle.Crime.Analysis) # socio-economics in M3?
summary(M2)
is.factor(Seattle.Crime.Analysis$AgeCat)
Seattle.Crime.Analysis$AgeCat <- as.factor(Seattle.Crime.Analysis$AgeCat)
M3 <- lm(CrimePerThousand ~ Established + AgeCat + HighSchool + Black + share_poverty, data=Seattle.Crime.Analysis) # re-code into factors
summary(M3)
devtools::install_version('Zelig', version = '5.0-11')
library(Zelig)
install.packages("Zelig")
library(Zelig)
Z1 <- zelig(CrimePerThousand ~ Established, data=Seattle.Crime.Analysis)
?zelig
help.zelig("models")
?zelig("models")
Z1 <- zelig(CrimePerThousand ~ Established, cite=FALSE, data=Seattle.Crime.Analysis, model = 'linear')
range(Seattle.Crime.Analysis$Established)
est_range <- 0:1
mp_coef <- matrix(coef(M1))
mp_vcov <- vcov(M1)
library(MASS)
drawn <- mvrnorm(n = 1000, mu = mp_coef, Sigma = mp_vcov) %>%
data.frame
head(drawn)[1:3, ]
drawn_sim <- merge(drawn, est_range)
drawn_sim <- dplyr::rename(drawn_sim, fitted_edu = y)
nrow(drawn)
nrow(drawn_sim)
names(drawn_sim)
drawn_sim$sim_wc <- drawn_sim[, 1] + drawn_sim[, 2] * drawn_sim[, 3]
ggplot(drawn_sim, aes(fitted_edu, sim_wc)) +
geom_point(alpha = 0.2) + stat_smooth(se = FALSE) +
theme_bw()
central <- drawn_sim %>% group_by(fitted_edu) %>%
summarise(median_sim = median(sim_wc),
lower_95 = quantile(sim_wc, probs = 0.025),
upper_95 = quantile(sim_wc, probs = 0.975)
)
ggplot(central, aes(fitted_edu, median_sim)) +
geom_ribbon(aes(ymin = lower_95, ymax = upper_95), alpha = 0.3) +
geom_line() + theme_bw()
